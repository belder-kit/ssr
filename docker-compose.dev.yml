version: "3.3"

services:
  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      - "traefik.http.routers.dashboard.service=api@internal"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.5"
        reservations:
          memory: 128M
  db:
    container_name: postgres-database
    image: postgres:15.0-alpine
    environment:
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: qwe
      POSTGRES_DB: db
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.5"
        reservations:
          memory: 128M
  # ssr:
  #   image: localhost:5000/app/ssr
  #   container_name: ssr
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.ssr.rule=(Host(`belderkit.localhost`)
  #     - traefik.http.routers.ssr.entrypoints=web
  #     - traefik.http.services.ssr.loadbalancer.server.port=3000
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 512M
  #         cpus: "0.5"
  #       reservations:
  #         memory: 128M
  pgadmin:
    container_name: pg-admin
    image: dpage/pgadmin4:6.20
    environment:
      PGADMIN_DEFAULT_EMAIL: pg@example.com
      PGADMIN_DEFAULT_PASSWORD: qwe
    labels:
      - traefik.enable=true
      - traefik.http.routers.db.rule=(Host(`belderkit.localhost`) && PathPrefix(`/db`))
      - traefik.http.middlewares.replacepath-db.replacepath.path=/
      - traefik.http.routers.db.middlewares=pg-admin-header@docker
      - traefik.http.routers.db.entrypoints=web
      - traefik.http.services.db.loadbalancer.server.port=80
      - traefik.http.middlewares.pg-admin-header.headers.customrequestheaders.X-Script-Name=/db
